version: "{build}"

os: Windows Server 2012 R2

clone_folder: c:\gopath\src\github.com\wellington\wellington

environment:
  GOPATH: c:\gopath
  WIN_VER: windows-na
  CGO_ENABLED: 1
  GOROOT_BOOTSTRAP: C:\go
  GOROOT: C:\go\go

install:
  # install nodejs and npm
  # - ps: Install-Product node $env:nodejs_version
  # install gcc (needed for sqlite3)
  #- choco install -y mingw
  #- set PATH=C:\tools\mingw64\bin;C:\gopath\bin;%PATH%

  - ps: $key = $env:priv_key #just the key contents, copied from notepad, into the environment variable on the UI
  - ps: $fileContent = "-----BEGIN RSA PRIVATE KEY-----" + "`n"
  - ps: for ($i = 0; $i -lt $key.Length / 64; $i++) { $min = [math]::min(64, $key.Length - ($i * 64)); $fileContent += $key.substring($i*64, $min) + "`n"; }
  - ps: $fileContent += "-----END RSA PRIVATE KEY-----" + "`n"
  - ps: Set-Content c:\users\appveyor\.ssh\id_rsa $fileContent
  - ps: |
      # Install MinGW.
      $url  = "http://sourceforge.net/projects/mingw-w64/files/"
      $url += "Toolchains%20targetting%20Win64/Personal%20Builds/"
      $url += "mingw-builds/4.9.2/threads-win32/seh/"
      $url += "x86_64-4.9.2-release-win32-seh-rt_v3-rev0.7z/download"
      # mirror on github for faster downloads
      $url  = "https://github.com/wellington/binaries/blob/master/x86_64-4.9.2-release-win32-seh-rt_v4-rev3.7z?raw=true"
      Invoke-WebRequest -UserAgent wget -Uri $url -OutFile x86_64-4.9.2-release-win32-seh-rt_v3-rev0.7z
      &7z x -oC:\ x86_64-4.9.2-release-win32-seh-rt_v3-rev0.7z > $null
  - set PATH=C:\mingw64\bin;C:\go\go\bin;C:\gopath\bin;%PATH%
  - set CC=gcc
  - set CXX=g++
  - echo %PATH%
  - echo %GOPATH%
  - dir C:\mingw64\bin
  #retrieve go 1.11.1
  - ps: |
      $file = "go1.11.1.windows-amd64.zip"
      $url  = "https://storage.googleapis.com/golang/"
      $url += $file
      Invoke-WebRequest -UserAgent wget -Uri $url -OutFile $file
      &7z x -oC:\go $file > $null
  - dir C:\go
  - go version
  - go env

build_script:
  - dir /s /b
  - git submodule update --init --recursive
  - mingw32-make windows
after_build:
  - 7z a wt_windows_amd64.zip wt.exe
artifacts:
  - path: wt_windows_amd64.zip
    name: wt_windows_amd64.zip
