version: "{build}"

os: Windows Server 2012 R2

clone_folder: c:\gopath\src\github.com\wellington\wellington

environment:
  GOPATH: c:\gopath
  WIN_VER: windows-na
  CGO_ENABLED: 1
  GOROOT_BOOTSTRAP: C:\go
  GOROOT: C:\go15\go

install:
  # install nodejs and npm
  # - ps: Install-Product node $env:nodejs_version
  # install gcc (needed for sqlite3)
  #- choco install -y mingw
  #- set PATH=C:\tools\mingw64\bin;C:\gopath\bin;%PATH%
  - ps: |
      # Install MinGW.
      $url  = "http://sourceforge.net/projects/mingw-w64/files/"
      $url += "Toolchains%20targetting%20Win64/Personal%20Builds/"
      $url += "mingw-builds/4.9.2/threads-win32/seh/"
      $url += "x86_64-4.9.2-release-win32-seh-rt_v3-rev0.7z/download"
      Invoke-WebRequest -UserAgent wget -Uri $url -OutFile x86_64-4.9.2-release-win32-seh-rt_v3-rev0.7z
      &7z x -oC:\ x86_64-4.9.2-release-win32-seh-rt_v3-rev0.7z > $null
  - set PATH=C:\mingw64\bin;C:\go15\go\bin;C:\gopath\bin;%PATH%
  - set CC=gcc
  - set CXX=g++
  - echo %PATH%
  - echo %GOPATH%
  #retrieve go 1.5
  - ps: |
      $file = "go1.5beta1.windows-amd64.zip"
      $url  = "https://storage.googleapis.com/golang/"
      $url += $file
      Invoke-WebRequest -UserAgent wget -Uri $url -OutFile go1.5beta1.windows-amd64.zip
      &7z x -oC:\go15 go1.5beta1.windows-amd64.zip > $null
  - dir C:\go15
  - go version
  - go get github.com/tools/godep
  - go get github.com/laher/goxc
  - godep restore

before_test:
  #cache packages for much faster building
  - go test -i -race ./...
  - go test -i ./...

after_test:
  - go test -race ./...

build_script:
  - go build -o wt.exe -ldflags "-extldflags '-static' -X=github.com/wellington/wellington/version.Version=%WIN_VER%" github.com/wellington/wellington/wt
after_build:
  - 7z a wt_windows_amd64.zip wt.exe

artifacts:
  - path: wt_windows_amd64.zip
    name: wt_windows_amd64.zip
